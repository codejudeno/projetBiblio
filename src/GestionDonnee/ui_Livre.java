/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GestionDonnee;

import javax.swing.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import javax.swing.border.BevelBorder;
import javax.swing.border.LineBorder;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import java.awt.event.*;
import java.util.HashSet;
import java.util.Random;
import java.util.Set;
import java.sql.*;


/**
 *
 * @author Squirrel
 */
public class ui_Livre extends javax.swing.JFrame {
    private DefaultTableModel model; // Déclaration correcte
    /**
     * Creates new form ui_Livre
     */
    public ui_Livre()
    {
        initComponents();
        connecterBD(); // Établir la connexion
        chargerCategories(); // Charger les catégories

        // Initialiser le modèle de table
        model = (DefaultTableModel) jTable2.getModel();
        // Définir les noms de colonnes si nécessaire
        model.setColumnIdentifiers(new String[]{
                "ID-Livre", "Titre", "Auteur", "ISBN",
                "Categorie", "Édition", "Publication",
                "Quantité Total", "Quantité Disponible"
        });
        chargerLivre();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        roundedPanel1 = new GestionDonnee.RoundedPanel();
        txtRecherche = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        textField_Auteur = new javax.swing.JTextField();
        textField_Isbn = new javax.swing.JTextField();
        textField_Edition = new javax.swing.JTextField();
        textField_Publication = new javax.swing.JTextField();
        textField_Exemplaire = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        comboBox_Categorie = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        btnAnnuler = new javax.swing.JButton();
        btnAJouterModification = new javax.swing.JButton();
        btnAJouter = new javax.swing.JButton();
        textField_Titre = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnmodifier = new javax.swing.JButton();
        btnSuprimer = new javax.swing.JButton();
        roundedPanel2 = new GestionDonnee.RoundedPanel();
        jLabel17 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();

        jScrollPane1.setBackground(new java.awt.Color(250, 248, 248));

        jTable1.setBackground(new java.awt.Color(250, 248, 248));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "ID-Livre", "Titre", "Auteur", "ISBN","Categorie","Édition","Publication","Nbr.d'examplaire"
                }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(1, 4, 88));

        jButton7.setBackground(new java.awt.Color(1, 4, 82));
        jButton7.setIcon(new javax.swing.ImageIcon("C:\\BookCraft_application\\icon\\deconecter_24px.png")); // NOI18N
        jButton7.setBorder(null);
        jButton7.setBorderPainted(false);
        jButton7.setFocusPainted(false);

        jLabel11.setIcon(new javax.swing.ImageIcon("C:\\BookCraft_application\\icon\\male_user_24px.png")); // NOI18N

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Printemps Judeno Steevenson");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe Script", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Boocraft");

        roundedPanel1.setBackground(new java.awt.Color(255, 255, 255));

        txtRecherche.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtRecherche.setBorder(null);
        txtRecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRechercheActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(247, 246, 246));
        jButton1.setToolTipText("Recherche");
        jButton1.setContentAreaFilled(false);
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roundedPanel1Layout = new javax.swing.GroupLayout(roundedPanel1);
        roundedPanel1.setLayout(roundedPanel1Layout);
        roundedPanel1Layout.setHorizontalGroup(
                roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedPanel1Layout.createSequentialGroup()
                                .addContainerGap(21, Short.MAX_VALUE)
                                .addComponent(txtRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        roundedPanel1Layout.setVerticalGroup(
                roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(roundedPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton1)
                                        .addGroup(roundedPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtRecherche)))
                                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(roundedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(213, 213, 213)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(roundedPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jButton9.setBackground(new java.awt.Color(247, 246, 246));
        jButton9.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon("C:\\BookCraft_application\\icon\\microsoft_excel_24px.png")); // NOI18N
        jButton9.setText("Exporter");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(247, 246, 246));
        jButton10.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon("C:\\BookCraft_application\\icon\\plus_24px.png")); // NOI18N
        jButton10.setText("Ajouter une Categorie");

        jButton8.setBackground(new java.awt.Color(247, 246, 246));
        jButton8.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon("C:\\BookCraft_application\\icon\\pdf_24px.png")); // NOI18N
        jButton8.setText("Exporter");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        textField_Auteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField_AuteurActionPerformed(evt);
            }
        });

        textField_Edition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField_EditionActionPerformed(evt);
            }
        });

        textField_Publication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField_PublicationActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Titre");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Auteur");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel15.setText("Publication");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel14.setText(" Édition ");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel16.setText("Nbr. d'exemplaires");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("ISBN");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel13.setText("Categorie");

        comboBox_Categorie.setBackground(new java.awt.Color(250, 248, 248));
        comboBox_Categorie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBox_Categorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox_CategorieActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(0, 153, 102));
        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        btnAnnuler.setBackground(new java.awt.Color(247, 246, 246));
        btnAnnuler.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnAnnuler.setIcon(new javax.swing.ImageIcon("C:\\BookCraft_application\\icon\\cancel_24px.png")); // NOI18N
        btnAnnuler.setText("Annuler");
        btnAnnuler.setPreferredSize(new java.awt.Dimension(94, 31));

        btnAJouterModification.setBackground(new java.awt.Color(247, 246, 246));
        btnAJouterModification.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnAJouterModification.setIcon(new javax.swing.ImageIcon("C:\\BookCraft_application\\icon\\plus_24px.png")); // NOI18N
        btnAJouterModification.setText("Ajouter");
        btnAJouterModification.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {

            }
        });

        btnAJouter.setBackground(new java.awt.Color(247, 246, 246));
        btnAJouter.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnAJouter.setIcon(new javax.swing.ImageIcon("C:\\BookCraft_application\\icon\\plus_24px.png")); // NOI18N
        btnAJouter.setText("Ajouter");
        btnAJouter.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ajouterLivre();
            }
        });

        textField_Titre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField_TitreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                                .addGap(858, 858, 858)
                                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(btnAJouter, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                                        .addComponent(btnAJouterModification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(49, 49, 49)
                                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(45, 45, 45)
                                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(43, 43, 43)
                                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(54, 54, 54)
                                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                                .addComponent(textField_Titre, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(textField_Auteur, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(textField_Isbn, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(comboBox_Categorie, 0, 181, Short.MAX_VALUE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(textField_Edition, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addGap(53, 53, 53))
                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                                .addGap(0, 3, Short.MAX_VALUE)
                                                                .addComponent(textField_Publication, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(textField_Exemplaire, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addContainerGap())))))
        );
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(textField_Auteur, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(textField_Isbn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(comboBox_Categorie, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(textField_Titre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(13, 13, 13))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(textField_Publication, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(textField_Exemplaire, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(textField_Edition, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)))
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(btnAnnuler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnAJouterModification)
                                                .addComponent(btnAJouter))
                                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(329, 329, 329))
        );

        btnAJouterModification.setVisible(true);

        jPanel9.setBackground(new java.awt.Color(255, 255, 102));
        jPanel9.setLayout(new java.awt.CardLayout());

        jScrollPane2.setBackground(new java.awt.Color(250, 248, 248));

        jTable2.setBackground(new java.awt.Color(250, 248, 248));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "ID-Livre", "Titre", "Auteur", "ISBN","Categorie","Édition","Publication","Nbr.d'examplaire"
                }
        ));
        jScrollPane2.setViewportView(jTable2);

        btnmodifier.setBackground(new java.awt.Color(247, 246, 246));
        btnmodifier.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnmodifier.setIcon(new javax.swing.ImageIcon("C:\\BookCraft_application\\icon\\icons8_edit_24px.png")); // NOI18N
        btnmodifier.setText("Modifier");

        btnmodifier.addActionListener(e ->
        {
            int selectedRow = jTable2.getSelectedRow();

            if (selectedRow >= 0) {
                // 1. Charger les données dans les champs
                textField_Titre.setText(model.getValueAt(selectedRow, 1).toString());
                textField_Auteur.setText(model.getValueAt(selectedRow, 2).toString());
                textField_Isbn.setText(model.getValueAt(selectedRow, 3).toString());
                comboBox_Categorie.setSelectedItem(model.getValueAt(selectedRow, 4).toString());
                textField_Edition.setText(model.getValueAt(selectedRow, 5).toString());
                textField_Publication.setText(model.getValueAt(selectedRow, 6).toString());
                textField_Exemplaire.setText(model.getValueAt(selectedRow, 7).toString());

                // 2. Changer l'état des boutons
                btnmodifier.setEnabled(false);
                btnAJouter.setVisible(false);
                btnAJouterModification.setVisible(true);
                btnAJouterModification.setText("Enregistrer");
                btnSuprimer.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this,
                        "Veuillez sélectionner une ligne à modifier.",
                        "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        });

        btnAJouterModification.addActionListener(e -> {
            modifierLivre(); // Appeler la méthode de modification

            // Remettre les boutons dans leur état initial
            btnmodifier.setEnabled(true);
            btnAJouter.setVisible(true);
            btnAJouterModification.setVisible(false);
            btnAJouterModification.setText("Ajouter");
        });

        btnSuprimer.setBackground(new java.awt.Color(247, 246, 246));
        btnSuprimer.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnSuprimer.setIcon(new javax.swing.ImageIcon("C:\\BookCraft_application\\icon\\icons8_delete_bin_24px.png")); // NOI18N
        btnSuprimer.setText("Supprimer");
        btnSuprimer.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                suprimerLivre();
            }
        });

        roundedPanel2.setBackground(new java.awt.Color(1, 4, 88));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setIcon(new javax.swing.ImageIcon("C:\\BookCraft_application\\icon\\descending_sorting_26px.png")); // NOI18N
        jLabel17.setText("Filtre");

        jComboBox2.setBackground(new java.awt.Color(250, 248, 248));
        jComboBox2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout roundedPanel2Layout = new javax.swing.GroupLayout(roundedPanel2);
        roundedPanel2.setLayout(roundedPanel2Layout);
        roundedPanel2Layout.setHorizontalGroup(
                roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(roundedPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        roundedPanel2Layout.setVerticalGroup(
                roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(roundedPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jScrollPane2)
                                                                .addGap(12, 12, 12)))
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnmodifier, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnSuprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(21, 21, 21))))
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                                                .addComponent(btnmodifier)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(btnSuprimer)
                                                .addGap(130, 130, 130))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGap(167, 167, 167)
                                                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(roundedPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRechercheActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void btnAJouterModificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAJouterModificationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAJouterModificationActionPerformed

    private void btnAJouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAJouterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAJouterActionPerformed

    private void textField_EditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField_EditionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField_EditionActionPerformed

    private void textField_PublicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField_PublicationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField_PublicationActionPerformed

    private void textField_AuteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField_AuteurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField_AuteurActionPerformed

    private void textField_TitreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField_TitreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField_TitreActionPerformed

    private void comboBox_CategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBox_CategorieActionPerformed
        // TODO add your handling code here:

        ajouterCategorie();
    }//GEN-LAST:event_comboBox_CategorieActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ui_Livre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ui_Livre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ui_Livre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ui_Livre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ui_Livre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAJouter;
    public javax.swing.JButton btnAJouterModification;
    private javax.swing.JButton btnAnnuler;
    private javax.swing.JButton btnmodifier;
    private javax.swing.JButton btnSuprimer;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> comboBox_Categorie;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtRecherche;
    private GestionDonnee.RoundedPanel roundedPanel1;
    private GestionDonnee.RoundedPanel roundedPanel2;
    private javax.swing.JTextField textField_Auteur;
    private javax.swing.JTextField textField_Isbn;
    private javax.swing.JTextField textField_Titre;
    private javax.swing.JTextField textField_Edition;
    private javax.swing.JTextField textField_Publication;
    private javax.swing.JTextField textField_Exemplaire;
    // End of variables declaration//GEN-END:variables

    private String titre, auteur, idLivre, ISBN, categorie, edition, publication, etat, qteDisponible, qteTotal;
    private static Set<String> usedIds = new HashSet<>();
    //private DefaultTableModel model;

    // connexion BD
    public static String chaineConnexion = "jdbc:mysql://localhost/bd_BooCraft_UIApp";
    public static String hote = "root";
    public static String password = "";
    public static Connection conn = null;
    public static Statement stat = null;
    public static ResultSet rs = null;

    private void connecterBD()
    {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); // Chaje driver MySQL
            conn = DriverManager.getConnection(chaineConnexion, hote, password);
            System.out.println("✅ Connexion réussie !");
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("❌ Erreur de connexion à la base de données: " + e.getMessage());
        }
    }

    public void ajouterCategorie()
    {

        JDialog dialog = new JDialog(this, "Ajouter une catégorie", true);
        dialog.setSize(400, 300);
        dialog.setLocationRelativeTo(this);
        dialog.getContentPane().setLayout(null); // Sa a ka rete null pou yon ti dialog senp
        dialog.setResizable(false);

        JLabel label = new JLabel("Nom de la nouvelle catégorie:");
        label.setFont(new Font("Times New Roman", Font.PLAIN, 15));
        label.setBounds(50, 50, 300, 30);
        dialog.getContentPane().add(label);

        JTextField fieldCategorie = new JTextField();
        fieldCategorie.setBounds(50, 100, 300, 30);
        dialog.getContentPane().add(fieldCategorie);

        JButton btnAjouter = new JButton("Ajouter Mod.");
        btnAjouter.setBackground(new Color(0, 120, 215));
        btnAjouter.setForeground(Color.WHITE);
        btnAjouter.setBounds(125, 160, 130, 35);
        dialog.getContentPane().add(btnAjouter);

        btnAjouter.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e) {
                String nouvelleCategorie = fieldCategorie.getText().trim();
                if (!nouvelleCategorie.isEmpty()) {
                    try {
                        conn = DriverManager.getConnection(chaineConnexion, hote, password);
                        PreparedStatement pst = conn.prepareStatement("INSERT INTO categorie (nom) VALUES (?)");
                        pst.setString(1, nouvelleCategorie);
                        pst.executeUpdate();

                        comboBox_Categorie.addItem(nouvelleCategorie); // Ajoute nan JComboBox
                        JOptionPane.showMessageDialog(dialog, "✅ Catégorie ajoutée !");
                        dialog.dispose();
                    } catch (SQLException ex) {
                        if (ex.getMessage().contains("Duplicate")) {
                            JOptionPane.showMessageDialog(dialog, "❗ Cette catégorie existe déjà.");
                        } else {
                            JOptionPane.showMessageDialog(dialog, "❌ Erreur : " + ex.getMessage());
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(dialog, "Veuillez entrer un nom de catégorie.");
                }
            }
        });

        dialog.setVisible(true);
    }

    // charger les categories
    private void chargerCategories()
    {
        try {
            conn = DriverManager.getConnection(chaineConnexion, hote, password);
            String sql = "SELECT nom FROM categorie";
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            comboBox_Categorie.removeAllItems();
            comboBox_Categorie.addItem(""); // pou vide

            while (rs.next())
            {
                comboBox_Categorie.addItem(rs.getString("nom"));
            }

            rs.close();
            pst.close();
            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur chargement catégories : " + e.getMessage());
        }
    }

    public void ajouterLivre()
    {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();

        variable();

        if (!titre.isEmpty() && !auteur.isEmpty() && !categorie.isEmpty() && !qteDisponible.isEmpty()) {
            String insertion_livre = "INSERT INTO bd_LivreApp (idLivre, titre, auteur, ISBN, categorie, edition, publication, qteTotal, qteDisponible) VALUES (?,?,?, ?, ?, ?, ?, ?, ?)";

            try {
                conn = DriverManager.getConnection(chaineConnexion, hote, password);
                PreparedStatement pst = conn.prepareStatement(insertion_livre);

                // Définir les valeurs des paramètres
                pst.setString(1, idLivre);
                pst.setString(2, titre);
                pst.setString(3, auteur);
                pst.setString(4, ISBN);
                pst.setString(5, categorie);
                pst.setString(6, edition);
                pst.setString(7, publication);
                // pst.setString(8, etat); // Etat pa nan tab la
                pst.setString(8, qteTotal);
                pst.setString(9, qteDisponible);

                // Exécuter la requête
                int rowsAffected = pst.executeUpdate();

                if (rowsAffected > 0) {
                    System.out.println("✅ Insertion réussie !");
                    model.addRow(new Object[]{idLivre, titre, auteur, ISBN, categorie, edition, publication, qteTotal, qteDisponible});

                    // 2. Rafraîchir l'affichage
                    jTable2.setModel(model);
                    jScrollPane2.getViewport().setView(jTable2);
                    jScrollPane2.revalidate();
                    jScrollPane2.repaint();

                    // Réinitialiser les champs de saisie
                    setChamps();

                    JOptionPane.showMessageDialog(this,
                            "Livre ajouté avec succès!",
                            "Succès", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    System.out.println("❌ Insertion échouée.");
                }

                // Fermer les ressources
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                System.out.println("❌ Erreur SQL : " + ex.getMessage());
                JOptionPane.showMessageDialog(this, "Erreur SQL : " + ex.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs obligatoires (Titre, Auteur, Catégorie, Nbr Exemplaire).", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }

    //action bouton ajouter, (base de donnee)
    private void setChamps()
    {
        // Reset fields and buttons
        textField_Titre.setText("");
        textField_Auteur.setText("");
        textField_Isbn.setText("");
        comboBox_Categorie.setSelectedIndex(0);
        textField_Edition.setText("");
        textField_Publication.setText("");
        // comboBox_Etat.setSelectedIndex(0); // Etat pa nan tab la
        textField_Exemplaire.setText("");
    }

    private void variable()
    {
        titre = textField_Titre.getText().trim();
        auteur = textField_Auteur.getText().trim();
        idLivre = generateUniqueId(titre, auteur);
        ISBN = textField_Isbn.getText().trim();
        categorie = (String) comboBox_Categorie.getSelectedItem();
        edition = textField_Edition.getText().trim();
        publication = textField_Publication.getText().trim();
        // etat = (String) comboBox_Etat.getSelectedItem(); // Etat pa nan tab la
        qteTotal = textField_Exemplaire.getText().trim();
        qteDisponible = textField_Exemplaire.getText().trim();
    }

    // genere id
    private String generateUniqueId(String titre, String auteur)
    {
        // Extraire les 2 premières lettres du titre et de l'auteur
        String partieTitre = titre.length() >= 2 ? titre.substring(0, 2).toUpperCase() : titre.toUpperCase();
        String partieAuteur = auteur.length() >= 2 ? auteur.substring(0, 2).toUpperCase() : auteur.toUpperCase();

        // Générer un nombre aléatoire de 4 chiffres entre 1 et 1000
        Random rand = new Random();
        int nombreAleatoire = rand.nextInt(1000) + 1;
        String nombreFormatte = String.format("%04d", nombreAleatoire); // Formatage à 4 chiffres

        // Combiner les parties pour former l'ID
        String newId = partieTitre + partieAuteur + nombreFormatte;

        // Vérifier si l'ID existe déjà dans la base de données
        do {
            nombreAleatoire = rand.nextInt(1000) + 1;
            nombreFormatte = String.format("%04d", nombreAleatoire);
            newId = partieTitre + partieAuteur + nombreFormatte;
        } while (usedIds.contains(newId));
        return newId;
    }

    //charger les livre depuis la base de donnee pour etre dans le tableau
    public void chargerLivre()
    {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0); // Vide le tableau
        String livreCharger = "SELECT * FROM bd_LivreApp";
        try {
            conn = DriverManager.getConnection(chaineConnexion, hote, password);
            stat = conn.createStatement();
            rs = stat.executeQuery(livreCharger);

            while (rs.next()) {
                model.addRow(new Object[]{
                        rs.getString("idLivre"),
                        rs.getString("titre"),
                        rs.getString("auteur"),
                        rs.getString("ISBN"),
                        rs.getString("categorie"),
                        rs.getString("edition"),
                        rs.getString("publication"),
                        rs.getString("qteTotal"),
                        rs.getString("qteDisponible"),
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors du chargement des données : " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void modifierLivre()
    {
        int selectedRow = jTable2.getSelectedRow();

        if (selectedRow ==-1 ) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner une ligne à modifier.", "Erreur", JOptionPane.ERROR_MESSAGE);
            setChamps();
            return;
        }

        // Get ID from selected row
        String id = model.getValueAt(selectedRow, 0).toString();

        // Get values from text fields
        String newTitre = textField_Titre.getText().trim();
        String newAuteur = textField_Auteur.getText().trim();
        String newISBN = textField_Isbn.getText().trim();
        String newCategorie = (String) comboBox_Categorie.getSelectedItem();
        String newEdition = textField_Edition.getText().trim();
        String newPublication = textField_Publication.getText().trim();
        String newQteTotal = textField_Exemplaire.getText().trim();
        String newQte = textField_Exemplaire.getText().trim();

        // Validate fields
        if (newTitre.isEmpty() || newAuteur.isEmpty() || newCategorie.isEmpty() ||
                newQte.isEmpty() || newQteTotal.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Vous n'avez pas rempli tous les champs obligatoires, SVP recommencer le processus !",
                    "Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            conn = DriverManager.getConnection(chaineConnexion, hote, password);
            // Use consistent table name (bd_LivreApp)
            String updateQuery = "UPDATE bd_LivreApp SET titre=?, auteur=?, ISBN=?, categorie=?, " +
                    "edition=?, publication=?, qteTotal=?, qteDisponible=? WHERE idLivre=?";

            PreparedStatement pst = conn.prepareStatement(updateQuery);
            pst.setString(1, newTitre);
            pst.setString(2, newAuteur);
            pst.setString(3, newISBN);
            pst.setString(4, newCategorie);
            pst.setString(5, newEdition);
            pst.setString(6, newPublication);
            pst.setString(7, newQteTotal);
            pst.setString(8, newQte);
            pst.setString(9, id);

            int rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                // Update the table model
                model.setValueAt(newTitre, selectedRow, 1);
                model.setValueAt(newAuteur, selectedRow, 2);
                model.setValueAt(newISBN, selectedRow, 3);
                model.setValueAt(newCategorie, selectedRow, 4);
                model.setValueAt(newEdition, selectedRow, 5);
                model.setValueAt(newPublication, selectedRow, 6);
                model.setValueAt(newQteTotal, selectedRow, 7);
                model.setValueAt(newQte, selectedRow, 8);

                JOptionPane.showMessageDialog(this,
                        "Livre modifié avec succès!",
                        "Succès", JOptionPane.INFORMATION_MESSAGE);
                setChamps();
            } else {
                JOptionPane.showMessageDialog(this,
                        "Aucune modification effectuée.",
                        "Information", JOptionPane.INFORMATION_MESSAGE);
            }

            pst.close();
            conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,
                    "Erreur SQL: " + ex.getMessage(),
                    "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }

    //suprimer une ligne dans le tableau
    private void suprimerLivre()
    {
        int[] selectedRows = jTable2.getSelectedRows(); // Récupérer les indices des lignes sélectionnées

        if (selectedRows.length == 0) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner au moins une ligne à supprimer.", "Erreur", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirmation = JOptionPane.showConfirmDialog(this, "Êtes-vous sûr de vouloir supprimer les livres sélectionnés ?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (confirmation == JOptionPane.YES_OPTION) {
            try {
                conn = DriverManager.getConnection(chaineConnexion, hote, password);

                for (int i = selectedRows.length - 1; i >= 0; i--) {
                    int selectedRow = selectedRows[i];
                    String idLivre = (String) model.getValueAt(selectedRow, 0);

                    // 1. Supprimer les emprunts liés à ce livre
                    String deleteEmprunts = "DELETE FROM bd_EmpruntApp WHERE idLivre = ?";
                    PreparedStatement pstEmprunt = conn.prepareStatement(deleteEmprunts);
                    pstEmprunt.setString(1, idLivre);
                    pstEmprunt.executeUpdate();
                    pstEmprunt.close();

                    // 2. Supprimer le livre
                    String deleteLivre = "DELETE FROM bd_LivreApp WHERE idLivre = ?";
                    PreparedStatement pstLivre = conn.prepareStatement(deleteLivre);
                    pstLivre.setString(1, idLivre);
                    int rowsAffected = pstLivre.executeUpdate();
                    pstLivre.close();

                    if (rowsAffected > 0) {
                        model.removeRow(selectedRow); // Supprimer la ligne du JTable
                    } else {
                        JOptionPane.showMessageDialog(this, "Erreur lors de la suppression du livre avec l'ID : " + idLivre, "Erreur", JOptionPane.ERROR_MESSAGE);
                    }
                }

                conn.close();
                JOptionPane.showMessageDialog(this, "Suppression réussie !", "Succès", JOptionPane.INFORMATION_MESSAGE);

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Erreur SQL : " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    // Rechercher un livre
    private void rechercherLivre()
    {
        String rechercheText = txtRecherche.getText().trim();
        if (rechercheText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ou pa antre okenn tèks pou chèche.", "Avertissement", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            conn = DriverManager.getConnection(chaineConnexion, hote, password);
            String query = "SELECT * FROM bd_Livre WHERE LOWER(idLivre) LIKE ? OR LOWER(titre) LIKE ? OR LOWER(auteur) LIKE ?";
            PreparedStatement pst = conn.prepareStatement(query);

            // Ajoute '%' pou pèmèt rechèch pasyèl
            pst.setString(1, "%" + rechercheText.toLowerCase() + "%");
            pst.setString(2, "%" + rechercheText.toLowerCase() + "%");
            pst.setString(3, "%" + rechercheText.toLowerCase() + "%");

            rs = pst.executeQuery();
            model.setRowCount(0);
            boolean trouve = false;

            while (rs.next()) {
                model.addRow(new Object[]{
                        rs.getString("idLivre"),
                        rs.getString("titre"),
                        rs.getString("auteur"),
                        rs.getString("ISBN"),
                        rs.getString("categorie"),
                        rs.getString("edition"),
                        rs.getString("publication"),
                        rs.getString("qteTotal"),
                        rs.getString("qteDisponible"),
                });
                trouve = true;
            }

            if (!trouve) {
                JOptionPane.showMessageDialog(this, "Pa gen okenn liv ki koresponn ak sa ou chèche a.", "Rezilta vid", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erreur SQL : " + ex.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }

}
